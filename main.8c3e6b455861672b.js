"use strict";(self.webpackChunkkafka_streams_visualization=self.webpackChunkkafka_streams_visualization||[]).push([[179],{429:(A,K,c)=>{var m=c(5427),o=c(3668),v=c(5485),C=c(4499),x=c(9463);const E=r=>r.replaceAll("-","-<br>");let R=(()=>{class r{static startFormatter(t){return`subgraph Sub-Topology: ${t}`}static endFormatter(){return"end"}static visit(t,e,n){let a=t.match(this.pattern);e.length&&e.push(this.endFormatter()),a&&(e.push(this.startFormatter(a[1])),n.push(a[1]))}}return r.pattern=/Sub-topology: ([0-9]*)/,r})(),b=(()=>{class r{static formatter(t,e){return`${e}[${e}] --\x3e ${t}(${E(t)})`}static visit(t,e,n,a){let i=t.match(this.pattern);i&&(a.currentGraphNodeName=i[1].trim(),i[2].split(",").filter(String).map(p=>p.trim()).forEach(p=>{e.push(this.formatter(a.currentGraphNodeName,p)),n.push(p)}))}}return r.pattern=/Source:\s+(\S+)\s+\(topics:\s+\[(.*)\]\)/,r})(),O=(()=>{class r{static formatter(t,e){return t.includes("JOIN")?`${e}[(${E(e)})] --\x3e ${t}(${E(t)})`:`${t}(${E(t)}) --\x3e ${e}[(${E(e)})]`}static visit(t,e,n,a){let i=t.match(this.pattern);i&&(e.currentGraphNodeName=i[1].trim(),i[2].split(",").filter(String).map(p=>p.trim()).forEach(p=>{n.push(this.formatter(e.currentGraphNodeName,p)),a.push(p)}))}}return r.pattern=/Processor:\s+(\S+)\s+\(stores:\s+\[(.*)\]\)/,r})(),y=(()=>{class r{static formatter(t,e){return`${t}(${E(t)}) --\x3e ${e}[${e}]`}static visit(t,e,n,a){let i=t.match(this.pattern);if(i){e.currentGraphNodeName=i[1].trim();let T=i[2].trim();n.push(this.formatter(e.currentGraphNodeName,T)),a.push(T)}}}return r.pattern=/Sink:\s+(\S+)\s+\(topic:\s+(.*)\)/,r})(),I=(()=>{class r{static formatter(t,e){return`${t}(${E(t)}) --\x3e ${e}(${E(e)})`}static visit(t,e,n){let a=t.match(this.pattern);a&&a[1].split(",").filter(String).map(i=>i.trim()).filter(i=>"none"!==i).forEach(i=>{n.push(this.formatter(e.currentGraphNodeName,i))})}}return r.pattern=/\s*-->\s+(.*)/,r})(),g=(()=>{class r{constructor(){this.topology=new C.X(null),this.topologySvg=new C.X(null);let t=window.location.hash;if(t){t.startsWith("#")&&(t=t.substr(1));try{let e=atob(t);this.setTopology(e)}catch(e){console.error("Unable to read topology from url",t,e)}}this.getTopology().pipe((0,x.b)(300)).subscribe(e=>{if(e){const n=class{static toMermaid(s){let t=s.split("\n"),e=[],n=[],a={currentGraphNodeName:""},i=[],T=[],p=[],u=[];for(const l of t)switch(!0){case R.pattern.test(l):R.visit(l,e,i);break;case b.pattern.test(l):b.visit(l,n,T,a);break;case O.pattern.test(l):O.visit(l,a,n,u);break;case y.pattern.test(l):y.visit(l,a,n,p);break;case I.pattern.test(l):I.visit(l,a,e)}return e.length&&e.push(R.endFormatter()),["graph TD"].concat(n).concat(e).concat(T).concat(p).concat(u).join("\n")}}.toMermaid(e);v.Z.mermaidAPI.render("mermaid-graph-"+Date.now(),n,a=>{this.topologySvg.next(a)})}else this.topologySvg.next(null)})}clearTopology(){this.topology.next(null),window.location.hash=""}setTopology(t){t!=this.topology.getValue()&&(this.topology.next(t),window.location.hash=btoa(t))}getTopology(){return this.topology}getTopologySvg(){return this.topologySvg}}return r.\u0275fac=function(t){return new(t||r)},r.\u0275prov=o.Yz7({token:r,factory:r.\u0275fac,providedIn:"root"}),r})(),F=(()=>{class r{}return r.\u0275fac=function(t){return new(t||r)},r.\u0275cmp=o.Xpm({type:r,selectors:[["app-fork-me"]],decls:3,vars:0,consts:[["href","https://github.com/gaetancollaud/kafka-streams-visualization"]],template:function(t,e){1&t&&(o.TgZ(0,"span"),o.TgZ(1,"a",0),o._uU(2,"Fork me on GitHub"),o.qZA(),o.qZA())},styles:['a[_ngcontent-%COMP%]{background:#000;color:#fff;text-decoration:none;font-family:arial,sans-serif;text-align:center;font-weight:bold;padding:5px 40px;font-size:1rem;line-height:2rem;position:relative;transition:.5s}a[_ngcontent-%COMP%]:hover{background:#c11;color:#fff}a[_ngcontent-%COMP%]:before, a[_ngcontent-%COMP%]:after{content:"";width:100%;display:block;position:absolute;top:1px;left:0;height:1px;background:#fff}a[_ngcontent-%COMP%]:after{bottom:1px;top:auto}@media screen and (min-width: 800px){span[_ngcontent-%COMP%]{position:fixed;display:block;top:0;right:0;width:200px;overflow:hidden;height:200px;z-index:9999}a[_ngcontent-%COMP%]{width:200px;position:absolute;top:60px;right:-60px;transform:rotate(45deg);-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);-moz-transform:rotate(45deg);-o-transform:rotate(45deg);box-shadow:4px 4px 10px #000c}}']}),r})();var P=c(8643),M=c(5278),d=c(559),f=c(6263),S=c(9133),h=c(888),k=c(8167),N=c(138),L=c(86);let Z=(()=>{class r{constructor(t,e){this.store=t,this.destroySubject=new d.t,this.formGroup=e.group({ascii:[]})}ngOnInit(){this.store.getTopology().pipe((0,f.R)(this.destroySubject)).subscribe(t=>this.formGroup.patchValue({ascii:t}))}ngOnDestroy(){this.destroySubject.next(null),this.destroySubject.complete()}onExample1(){this.formGroup.patchValue({ascii:"Topology\nSub-topologies:\nSub-topology: 0\n\tSource:  KSTREAM-SOURCE-0000000000 (topics: [conversation-meta])\n\t--\x3e KSTREAM-TRANSFORM-0000000001\n\tProcessor: KSTREAM-TRANSFORM-0000000001 (stores: [conversation-meta-state])\n\t--\x3e KSTREAM-KEY-SELECT-0000000002\n\t<-- KSTREAM-SOURCE-0000000000\n\tProcessor: KSTREAM-KEY-SELECT-0000000002 (stores: [])\n\t--\x3e KSTREAM-FILTER-0000000005\n\t<-- KSTREAM-TRANSFORM-0000000001\n\tProcessor: KSTREAM-FILTER-0000000005 (stores: [])\n\t--\x3e KSTREAM-SINK-0000000004\n\t<-- KSTREAM-KEY-SELECT-0000000002\n\tSink: KSTREAM-SINK-0000000004 (topic: count-resolved-repartition)\n\t<-- KSTREAM-FILTER-0000000005\nSub-topology: 1\n\tSource: KSTREAM-SOURCE-0000000006 (topics: [count-resolved-repartition])\n\t--\x3e KSTREAM-AGGREGATE-0000000003\n\tProcessor: KSTREAM-AGGREGATE-0000000003 (stores: [count-resolved])\n\t--\x3e KTABLE-TOSTREAM-0000000007\n\t<-- KSTREAM-SOURCE-0000000006\n\tProcessor: KTABLE-TOSTREAM-0000000007 (stores: [])\n\t--\x3e KSTREAM-SINK-0000000008\n\t<-- KSTREAM-AGGREGATE-0000000003\n\tSink: KSTREAM-SINK-0000000008 (topic: streams-count-resolved)\n\t<-- KTABLE-TOSTREAM-0000000007\n\t\t\t"}),this.onSave()}onExample2(){this.formGroup.patchValue({ascii:"Sub-topologies:\n Sub-topology: 0\n   Source: KSTREAM-SOURCE-0000000000 (topics: [kongo-rfid-8])\n     --\x3e KSTREAM-FILTER-0000000010, KSTREAM-FILTER-0000000012\n   Processor: KSTREAM-FILTER-0000000010 (stores: [])\n     --\x3e KSTREAM-MAP-0000000011\n     <-- KSTREAM-SOURCE-0000000000\n   Processor: KSTREAM-FILTER-0000000012 (stores: [])\n     --\x3e KSTREAM-MAP-0000000013\n     <-- KSTREAM-SOURCE-0000000000\n   Processor: KSTREAM-MAP-0000000011 (stores: [])\n     --\x3e KSTREAM-FILTER-0000000015\n     <-- KSTREAM-FILTER-0000000010\n   Processor: KSTREAM-MAP-0000000013 (stores: [])\n     --\x3e KSTREAM-FILTER-0000000028\n     <-- KSTREAM-FILTER-0000000012\n   Processor: KSTREAM-FILTER-0000000015 (stores: [])\n     --\x3e KSTREAM-SINK-0000000014\n     <-- KSTREAM-MAP-0000000011\n   Processor: KSTREAM-FILTER-0000000028 (stores: [])\n     --\x3e KSTREAM-SINK-0000000027\n     <-- KSTREAM-MAP-0000000013\n   Sink: KSTREAM-SINK-0000000014 (topic: KSTREAM-MAP-0000000011-repartition)\n     <-- KSTREAM-FILTER-0000000015\n   Sink: KSTREAM-SINK-0000000027 (topic: KSTREAM-MAP-0000000013-repartition)\n     <-- KSTREAM-FILTER-0000000028\n Sub-topology: 1\n   Source: KSTREAM-SOURCE-0000000016 (topics: [KSTREAM-MAP-0000000011-repartition])\n     --\x3e KSTREAM-JOIN-0000000017\n   Source: KSTREAM-SOURCE-0000000029 (topics: [KSTREAM-MAP-0000000013-repartition])\n     --\x3e KSTREAM-JOIN-0000000030\n   Processor: KSTREAM-JOIN-0000000017 (stores: [kongo-goods-weight-8STATE-STORE-0000000001])\n     --\x3e KSTREAM-MAP-0000000018\n     <-- KSTREAM-SOURCE-0000000016\n   Processor: KSTREAM-JOIN-0000000030 (stores: [kongo-goods-weight-8STATE-STORE-0000000001])\n     --\x3e KSTREAM-MAP-0000000031\n     <-- KSTREAM-SOURCE-0000000029\n   Processor: KSTREAM-MAP-0000000018 (stores: [])\n     --\x3e KSTREAM-FILTER-0000000020\n     <-- KSTREAM-JOIN-0000000017\n   Processor: KSTREAM-MAP-0000000031 (stores: [])\n     --\x3e KSTREAM-FILTER-0000000033\n     <-- KSTREAM-JOIN-0000000030\n   Processor: KSTREAM-FILTER-0000000020 (stores: [])\n     --\x3e KSTREAM-SINK-0000000019\n     <-- KSTREAM-MAP-0000000018\n   Processor: KSTREAM-FILTER-0000000033 (stores: [])\n     --\x3e KSTREAM-SINK-0000000032\n     <-- KSTREAM-MAP-0000000031\n   Source: KSTREAM-SOURCE-0000000002 (topics: [kongo-goods-weight-8])\n     --\x3e KTABLE-SOURCE-0000000003\n   Sink: KSTREAM-SINK-0000000019 (topic: KSTREAM-MAP-0000000018-repartition)\n     <-- KSTREAM-FILTER-0000000020\n   Sink: KSTREAM-SINK-0000000032 (topic: KSTREAM-MAP-0000000031-repartition)\n     <-- KSTREAM-FILTER-0000000033\n   Processor: KTABLE-SOURCE-0000000003 (stores: [kongo-goods-weight-8STATE-STORE-0000000001])\n     --\x3e none\n     <-- KSTREAM-SOURCE-0000000002\n Sub-topology: 2\n   Source: KSTREAM-SOURCE-0000000021 (topics: [KSTREAM-MAP-0000000018-repartition])\n     --\x3e KSTREAM-LEFTJOIN-0000000022\n   Processor: KSTREAM-LEFTJOIN-0000000022 (stores: [kongo-trucks-weight-8STATE-STORE-0000000007])\n     --\x3e KSTREAM-JOIN-0000000024, KSTREAM-SINK-0000000023\n     <-- KSTREAM-SOURCE-0000000021\n   Processor: KSTREAM-JOIN-0000000024 (stores: [kongo-trucks-maxweight-8STATE-STORE-0000000004])\n     --\x3e KSTREAM-FILTER-0000000025\n     <-- KSTREAM-LEFTJOIN-0000000022\n   Source: KSTREAM-SOURCE-0000000034 (topics: [KSTREAM-MAP-0000000031-repartition])\n     --\x3e KSTREAM-LEFTJOIN-0000000035\n   Processor: KSTREAM-FILTER-0000000025 (stores: [])\n     --\x3e KSTREAM-SINK-0000000026\n     <-- KSTREAM-JOIN-0000000024\n   Processor: KSTREAM-LEFTJOIN-0000000035 (stores: [kongo-trucks-weight-8STATE-STORE-0000000007])\n     --\x3e KSTREAM-SINK-0000000036\n     <-- KSTREAM-SOURCE-0000000034\n   Source: KSTREAM-SOURCE-0000000005 (topics: [kongo-trucks-maxweight-8])\n     --\x3e KTABLE-SOURCE-0000000006\n   Source: KSTREAM-SOURCE-0000000008 (topics: [kongo-trucks-weight-8])\n     --\x3e KTABLE-SOURCE-0000000009\n   Sink: KSTREAM-SINK-0000000023 (topic: kongo-trucks-weight-8)\n     <-- KSTREAM-LEFTJOIN-0000000022\n   Sink: KSTREAM-SINK-0000000026 (topic: kongo-overload-warnings)\n     <-- KSTREAM-FILTER-0000000025\n   Sink: KSTREAM-SINK-0000000036 (topic: kongo-trucks-weight-8)\n     <-- KSTREAM-LEFTJOIN-0000000035\n   Processor: KTABLE-SOURCE-0000000006 (stores: [kongo-trucks-maxweight-8STATE-STORE-0000000004])\n     --\x3e none\n     <-- KSTREAM-SOURCE-0000000005\n   Processor: KTABLE-SOURCE-0000000009 (stores: [kongo-trucks-weight-8STATE-STORE-0000000007])\n     --\x3e none\n     <-- KSTREAM-SOURCE-0000000008"}),this.onSave()}textAreaChanged(){}onSave(){var t;this.store.setTopology(null===(t=this.formGroup.get("ascii"))||void 0===t?void 0:t.value.trim())}onClear(){this.formGroup.patchValue({ascii:void 0}),this.store.clearTopology()}}return r.\u0275fac=function(t){return new(t||r)(o.Y36(g),o.Y36(S.qu))},r.\u0275cmp=o.Xpm({type:r,selectors:[["app-ascii-input"]],decls:19,vars:1,consts:[["href","https://kafka.apache.org/23/javadoc/org/apache/kafka/streams/Topology.html#describe--"],[3,"formGroup"],["appearance","outline"],["matInput","","placeholder","Paste here","formControlName","ascii"],["mat-raised-button","","color","primary",3,"click"],["mat-raised-button","",3,"click"],["mat-button","","color","warn",3,"click"]],template:function(t,e){1&t&&(o.TgZ(0,"mat-card"),o.TgZ(1,"mat-card-content"),o.TgZ(2,"p"),o._uU(3," Paste your topology in the ASCII format here. This can be printed by using "),o.TgZ(4,"a",0),o._uU(5,"Topology.describe()"),o.qZA(),o._uU(6,". "),o.qZA(),o.TgZ(7,"form",1),o.TgZ(8,"mat-form-field",2),o._UZ(9,"textarea",3),o.qZA(),o.qZA(),o.qZA(),o.TgZ(10,"mat-card-actions"),o.TgZ(11,"button",4),o.NdJ("click",function(){return e.onSave()}),o._uU(12,"Convert to image"),o.qZA(),o.TgZ(13,"button",5),o.NdJ("click",function(){return e.onClear()}),o._uU(14,"Clear"),o.qZA(),o.TgZ(15,"button",6),o.NdJ("click",function(){return e.onExample1()}),o._uU(16,"Example 1"),o.qZA(),o.TgZ(17,"button",6),o.NdJ("click",function(){return e.onExample2()}),o._uU(18,"Example 2"),o.qZA(),o.qZA(),o.qZA()),2&t&&(o.xp6(7),o.Q6J("formGroup",e.formGroup))},directives:[h.a8,h.dn,S._Y,S.JL,S.sg,k.KE,N.Nt,S.Fj,S.JJ,S.u,h.hq,L.lW],styles:["mat-form-field[_ngcontent-%COMP%]{width:100%}textarea[_ngcontent-%COMP%]{height:300px}mat-card-actions[_ngcontent-%COMP%]{text-align:center}"]}),r})();var J=c(6019);function _(r,s){if(1&r&&o._UZ(0,"div",1),2&r){const t=o.oxw();o.Q6J("innerHTML",t.svgContent,o.oJD)}}let $=(()=>{class r{constructor(t,e){this.sanitizer=t,this.store=e,this.destroySubject=new d.t}ngOnInit(){this.store.getTopologySvg().pipe((0,f.R)(this.destroySubject)).subscribe(t=>{this.svgContent=t?this.sanitizer.bypassSecurityTrustHtml(t):void 0})}ngOnDestroy(){this.destroySubject.next(null),this.destroySubject.complete()}}return r.\u0275fac=function(t){return new(t||r)(o.Y36(m.H7),o.Y36(g))},r.\u0275cmp=o.Xpm({type:r,selectors:[["app-graph-render-svg"]],decls:1,vars:1,consts:[[3,"innerHTML",4,"ngIf"],[3,"innerHTML"]],template:function(t,e){1&t&&o.YNc(0,_,1,1,"div",0),2&t&&o.Q6J("ngIf",e.svgContent)},directives:[J.O5],styles:['svg[_ngcontent-%COMP%]{resize:none;font-family:SFMonoRegular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace}div[_ngcontent-%COMP%]{text-align:center}']}),r})();const j=["canvas"];let Y=(()=>{class r{constructor(t,e){this.sanitizer=t,this.store=e,this.destroySubject=new d.t}ngAfterViewInit(){this.store.getTopologySvg().pipe((0,f.R)(this.destroySubject)).subscribe(t=>{t?this.printSvgToCanvas(t):this.clearCanvas()})}ngOnDestroy(){this.destroySubject.next(null),this.destroySubject.complete()}clearCanvas(){var t;let e=null===(t=this.canvas)||void 0===t?void 0:t.nativeElement,n=e.getContext("2d");n&&n.clearRect(0,0,e.width,e.height)}printSvgToCanvas(t){var e;try{let n=window.URL||window.webkitURL||window;if(!n)throw new Error("(browser doesnt support this)");let a=null===(e=this.canvas)||void 0===e?void 0:e.nativeElement,i=a.getContext("2d"),T=new Blob([t],{type:"image/svg+xml;charset=utf-8"}),p=n.createObjectURL(T),u=new Image;u.onload=()=>{a.width=u.width,a.height=u.height,i&&i.drawImage(u,0,0)},u.crossOrigin="Anonymous",u.src=p}catch(n){console.error("Failed to generate canvas")}}}return r.\u0275fac=function(t){return new(t||r)(o.Y36(m.H7),o.Y36(g))},r.\u0275cmp=o.Xpm({type:r,selectors:[["app-graph-render-canvas"]],viewQuery:function(t,e){if(1&t&&o.Gf(j,5),2&t){let n;o.iGM(n=o.CRH())&&(e.canvas=n.first)}},decls:2,vars:0,consts:[["canvas",""]],template:function(t,e){1&t&&o._UZ(0,"canvas",null,0)},styles:["[_nghost-%COMP%]{display:block;text-align:center}"]}),r})();const z=["tabGroup"];let B=(()=>{class r{constructor(t){this.store=t}ngOnInit(){v.Z.initialize({theme:"default",startOnLoad:!1}),this.store.getTopologySvg().subscribe(t=>{t&&this.tabGroup&&(this.tabGroup.selectedIndex=1)})}}return r.\u0275fac=function(t){return new(t||r)(o.Y36(g))},r.\u0275cmp=o.Xpm({type:r,selectors:[["app-root"]],viewQuery:function(t,e){if(1&t&&o.Gf(z,5),2&t){let n;o.iGM(n=o.CRH())&&(e.tabGroup=n.first)}},decls:13,vars:0,consts:[[1,"example-spacer"],["backgroundColor","primary","mat-align-tabs","center","animationDuration","0ms"],["tabGroup",""],["label","Ascii"],["label","SVG render"],["label","Canvas render"]],template:function(t,e){1&t&&(o._UZ(0,"app-fork-me"),o.TgZ(1,"mat-toolbar"),o.TgZ(2,"span"),o._uU(3,"Kafka Streams visualization"),o.qZA(),o._UZ(4,"span",0),o.qZA(),o.TgZ(5,"mat-tab-group",1,2),o.TgZ(7,"mat-tab",3),o._UZ(8,"app-ascii-input"),o.qZA(),o.TgZ(9,"mat-tab",4),o._UZ(10,"app-graph-render-svg"),o.qZA(),o.TgZ(11,"mat-tab",5),o._UZ(12,"app-graph-render-canvas"),o.qZA(),o.qZA())},directives:[F,P.Ye,M.SP,M.uX,Z,$,Y],styles:[".example-spacer[_ngcontent-%COMP%]{flex:1 1 auto}mat-tab-group[_ngcontent-%COMP%]{max-height:calc(100% - 64px)}mat-tab[_ngcontent-%COMP%]{overflow:auto}"]}),r})();var X=c(9555),H=c(3775);let D=(()=>{class r{}return r.\u0275fac=function(t){return new(t||r)},r.\u0275mod=o.oAB({type:r,bootstrap:[B]}),r.\u0275inj=o.cJS({providers:[],imports:[[m.b2,X.PW,S.u5,S.UX,P.g0,H.Ps,L.ot,M.Nh,k.lN,N.c,h.QW]]}),r})();(0,o.G48)(),m.q6().bootstrapModule(D).catch(r=>console.error(r))}},A=>{A.O(0,[736],()=>A(A.s=429)),A.O()}]);