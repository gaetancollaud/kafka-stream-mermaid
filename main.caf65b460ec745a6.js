"use strict";(self.webpackChunkkafka_streams_visualization=self.webpackChunkkafka_streams_visualization||[]).push([[179],{9407:(h,f,i)=>{var E=i(6593),e=i(9212),K=i(522),v=i(5619),L=i(3620);const u=s=>s.replaceAll("-","-<br>");let A=(()=>{class s{static#t=this.pattern=/Sub-topology: ([0-9]*)/;static startFormatter(o){return`subgraph Sub-Topology: ${o}`}static endFormatter(){return"end"}static visit(o,t,r){let n=o.match(this.pattern);t.length&&t.push(this.endFormatter()),n&&(t.push(this.startFormatter(n[1])),r.push(n[1]))}}return s})(),b=(()=>{class s{static#t=this.pattern=/Source:\s+(\S+)\s+\(topics:\s+\[(.*)\]\)/;static formatter(o,t){return`${t}[${t}] --\x3e ${o}(${u(o)})`}static visit(o,t,r,n){let a=o.match(this.pattern);a&&(n.currentGraphNodeName=a[1].trim(),a[2].split(",").filter(String).map(c=>c.trim()).forEach(c=>{t.push(this.formatter(n.currentGraphNodeName,c)),r.push(c)}))}}return s})(),O=(()=>{class s{static#t=this.pattern=/Processor:\s+(\S+)\s+\(stores:\s+\[(.*)\]\)/;static formatter(o,t){return o.includes("JOIN")?`${t}[(${u(t)})] --\x3e ${o}(${u(o)})`:`${o}(${u(o)}) --\x3e ${t}[(${u(t)})]`}static visit(o,t,r,n){let a=o.match(this.pattern);a&&(t.currentGraphNodeName=a[1].trim(),a[2].split(",").filter(String).map(c=>c.trim()).forEach(c=>{r.push(this.formatter(t.currentGraphNodeName,c)),n.push(c)}))}}return s})(),C=(()=>{class s{static#t=this.pattern=/Sink:\s+(\S+)\s+\(topic:\s+(.*)\)/;static formatter(o,t){return`${o}(${u(o)}) --\x3e ${t}[${t}]`}static visit(o,t,r,n){let a=o.match(this.pattern);if(a){t.currentGraphNodeName=a[1].trim();let S=a[2].trim();r.push(this.formatter(t.currentGraphNodeName,S)),n.push(S)}}}return s})(),y=(()=>{class s{static#t=this.pattern=/\s*-->\s+(.*)/;static formatter(o,t){return`${o}(${u(o)}) --\x3e ${t}(${u(t)})`}static visit(o,t,r){let n=o.match(this.pattern);n&&n[1].split(",").filter(String).map(a=>a.trim()).filter(a=>"none"!==a).forEach(a=>{r.push(this.formatter(t.currentGraphNodeName,a))})}}return s})();class w{static toMermaid(T){let o=T.split("\n"),t=[],r=[],n={currentGraphNodeName:""},a=[],S=[],c=[],x=[];for(const p of o)switch(!0){case A.pattern.test(p):A.visit(p,t,a);break;case b.pattern.test(p):b.visit(p,r,S,n);break;case O.pattern.test(p):O.visit(p,n,r,x);break;case C.pattern.test(p):C.visit(p,n,r,c);break;case y.pattern.test(p):y.visit(p,n,t)}return t.length&&t.push(A.endFormatter()),["graph TD"].concat(r).concat(t).concat(S).concat(c).concat(x).join("\n")}}let m=(()=>{class s{constructor(){this.topology=new v.X(null),this.topologySvg=new v.X(null);let o=window.location.hash;if(o){o.startsWith("#")&&(o=o.substr(1));try{let t=atob(o);this.setTopology(t)}catch(t){console.error("Unable to read topology from url",o,t)}}this.getTopology().pipe((0,L.b)(300)).subscribe(t=>{if(t){const r=w.toMermaid(t);K.Z.mermaidAPI.render("mermaid-graph-"+Date.now(),r,n=>{this.topologySvg.next(n)})}else this.topologySvg.next(null)})}clearTopology(){this.topology.next(null),window.location.hash=""}setTopology(o){o!=this.topology.getValue()&&(this.topology.next(o),window.location.hash=btoa(o))}getTopology(){return this.topology}getTopologySvg(){return this.topologySvg}static#t=this.\u0275fac=function(t){return new(t||s)};static#o=this.\u0275prov=e.Yz7({token:s,factory:s.\u0275fac,providedIn:"root"})}return s})();var I=i(1274),g=i(9142),M=i(7328),d=i(9773),l=i(6223),k=i(2296),P=i(5683),N=i(4516),G=i(6263),R=i(5195);let Z=(()=>{class s{constructor(o,t){this.store=o,this.destroySubject=new M.t,this.formGroup=t.group({ascii:[]})}ngOnInit(){this.store.getTopology().pipe((0,d.R)(this.destroySubject)).subscribe(o=>this.formGroup.patchValue({ascii:o}))}ngOnDestroy(){this.destroySubject.next(null),this.destroySubject.complete()}onExample1(){this.formGroup.patchValue({ascii:"Topology\nSub-topologies:\nSub-topology: 0\n\tSource:  KSTREAM-SOURCE-0000000000 (topics: [conversation-meta])\n\t--\x3e KSTREAM-TRANSFORM-0000000001\n\tProcessor: KSTREAM-TRANSFORM-0000000001 (stores: [conversation-meta-state])\n\t--\x3e KSTREAM-KEY-SELECT-0000000002\n\t<-- KSTREAM-SOURCE-0000000000\n\tProcessor: KSTREAM-KEY-SELECT-0000000002 (stores: [])\n\t--\x3e KSTREAM-FILTER-0000000005\n\t<-- KSTREAM-TRANSFORM-0000000001\n\tProcessor: KSTREAM-FILTER-0000000005 (stores: [])\n\t--\x3e KSTREAM-SINK-0000000004\n\t<-- KSTREAM-KEY-SELECT-0000000002\n\tSink: KSTREAM-SINK-0000000004 (topic: count-resolved-repartition)\n\t<-- KSTREAM-FILTER-0000000005\nSub-topology: 1\n\tSource: KSTREAM-SOURCE-0000000006 (topics: [count-resolved-repartition])\n\t--\x3e KSTREAM-AGGREGATE-0000000003\n\tProcessor: KSTREAM-AGGREGATE-0000000003 (stores: [count-resolved])\n\t--\x3e KTABLE-TOSTREAM-0000000007\n\t<-- KSTREAM-SOURCE-0000000006\n\tProcessor: KTABLE-TOSTREAM-0000000007 (stores: [])\n\t--\x3e KSTREAM-SINK-0000000008\n\t<-- KSTREAM-AGGREGATE-0000000003\n\tSink: KSTREAM-SINK-0000000008 (topic: streams-count-resolved)\n\t<-- KTABLE-TOSTREAM-0000000007\n\t\t\t"}),this.onSave()}onExample2(){this.formGroup.patchValue({ascii:"Sub-topologies:\n Sub-topology: 0\n   Source: KSTREAM-SOURCE-0000000000 (topics: [kongo-rfid-8])\n     --\x3e KSTREAM-FILTER-0000000010, KSTREAM-FILTER-0000000012\n   Processor: KSTREAM-FILTER-0000000010 (stores: [])\n     --\x3e KSTREAM-MAP-0000000011\n     <-- KSTREAM-SOURCE-0000000000\n   Processor: KSTREAM-FILTER-0000000012 (stores: [])\n     --\x3e KSTREAM-MAP-0000000013\n     <-- KSTREAM-SOURCE-0000000000\n   Processor: KSTREAM-MAP-0000000011 (stores: [])\n     --\x3e KSTREAM-FILTER-0000000015\n     <-- KSTREAM-FILTER-0000000010\n   Processor: KSTREAM-MAP-0000000013 (stores: [])\n     --\x3e KSTREAM-FILTER-0000000028\n     <-- KSTREAM-FILTER-0000000012\n   Processor: KSTREAM-FILTER-0000000015 (stores: [])\n     --\x3e KSTREAM-SINK-0000000014\n     <-- KSTREAM-MAP-0000000011\n   Processor: KSTREAM-FILTER-0000000028 (stores: [])\n     --\x3e KSTREAM-SINK-0000000027\n     <-- KSTREAM-MAP-0000000013\n   Sink: KSTREAM-SINK-0000000014 (topic: KSTREAM-MAP-0000000011-repartition)\n     <-- KSTREAM-FILTER-0000000015\n   Sink: KSTREAM-SINK-0000000027 (topic: KSTREAM-MAP-0000000013-repartition)\n     <-- KSTREAM-FILTER-0000000028\n Sub-topology: 1\n   Source: KSTREAM-SOURCE-0000000016 (topics: [KSTREAM-MAP-0000000011-repartition])\n     --\x3e KSTREAM-JOIN-0000000017\n   Source: KSTREAM-SOURCE-0000000029 (topics: [KSTREAM-MAP-0000000013-repartition])\n     --\x3e KSTREAM-JOIN-0000000030\n   Processor: KSTREAM-JOIN-0000000017 (stores: [kongo-goods-weight-8STATE-STORE-0000000001])\n     --\x3e KSTREAM-MAP-0000000018\n     <-- KSTREAM-SOURCE-0000000016\n   Processor: KSTREAM-JOIN-0000000030 (stores: [kongo-goods-weight-8STATE-STORE-0000000001])\n     --\x3e KSTREAM-MAP-0000000031\n     <-- KSTREAM-SOURCE-0000000029\n   Processor: KSTREAM-MAP-0000000018 (stores: [])\n     --\x3e KSTREAM-FILTER-0000000020\n     <-- KSTREAM-JOIN-0000000017\n   Processor: KSTREAM-MAP-0000000031 (stores: [])\n     --\x3e KSTREAM-FILTER-0000000033\n     <-- KSTREAM-JOIN-0000000030\n   Processor: KSTREAM-FILTER-0000000020 (stores: [])\n     --\x3e KSTREAM-SINK-0000000019\n     <-- KSTREAM-MAP-0000000018\n   Processor: KSTREAM-FILTER-0000000033 (stores: [])\n     --\x3e KSTREAM-SINK-0000000032\n     <-- KSTREAM-MAP-0000000031\n   Source: KSTREAM-SOURCE-0000000002 (topics: [kongo-goods-weight-8])\n     --\x3e KTABLE-SOURCE-0000000003\n   Sink: KSTREAM-SINK-0000000019 (topic: KSTREAM-MAP-0000000018-repartition)\n     <-- KSTREAM-FILTER-0000000020\n   Sink: KSTREAM-SINK-0000000032 (topic: KSTREAM-MAP-0000000031-repartition)\n     <-- KSTREAM-FILTER-0000000033\n   Processor: KTABLE-SOURCE-0000000003 (stores: [kongo-goods-weight-8STATE-STORE-0000000001])\n     --\x3e none\n     <-- KSTREAM-SOURCE-0000000002\n Sub-topology: 2\n   Source: KSTREAM-SOURCE-0000000021 (topics: [KSTREAM-MAP-0000000018-repartition])\n     --\x3e KSTREAM-LEFTJOIN-0000000022\n   Processor: KSTREAM-LEFTJOIN-0000000022 (stores: [kongo-trucks-weight-8STATE-STORE-0000000007])\n     --\x3e KSTREAM-JOIN-0000000024, KSTREAM-SINK-0000000023\n     <-- KSTREAM-SOURCE-0000000021\n   Processor: KSTREAM-JOIN-0000000024 (stores: [kongo-trucks-maxweight-8STATE-STORE-0000000004])\n     --\x3e KSTREAM-FILTER-0000000025\n     <-- KSTREAM-LEFTJOIN-0000000022\n   Source: KSTREAM-SOURCE-0000000034 (topics: [KSTREAM-MAP-0000000031-repartition])\n     --\x3e KSTREAM-LEFTJOIN-0000000035\n   Processor: KSTREAM-FILTER-0000000025 (stores: [])\n     --\x3e KSTREAM-SINK-0000000026\n     <-- KSTREAM-JOIN-0000000024\n   Processor: KSTREAM-LEFTJOIN-0000000035 (stores: [kongo-trucks-weight-8STATE-STORE-0000000007])\n     --\x3e KSTREAM-SINK-0000000036\n     <-- KSTREAM-SOURCE-0000000034\n   Source: KSTREAM-SOURCE-0000000005 (topics: [kongo-trucks-maxweight-8])\n     --\x3e KTABLE-SOURCE-0000000006\n   Source: KSTREAM-SOURCE-0000000008 (topics: [kongo-trucks-weight-8])\n     --\x3e KTABLE-SOURCE-0000000009\n   Sink: KSTREAM-SINK-0000000023 (topic: kongo-trucks-weight-8)\n     <-- KSTREAM-LEFTJOIN-0000000022\n   Sink: KSTREAM-SINK-0000000026 (topic: kongo-overload-warnings)\n     <-- KSTREAM-FILTER-0000000025\n   Sink: KSTREAM-SINK-0000000036 (topic: kongo-trucks-weight-8)\n     <-- KSTREAM-LEFTJOIN-0000000035\n   Processor: KTABLE-SOURCE-0000000006 (stores: [kongo-trucks-maxweight-8STATE-STORE-0000000004])\n     --\x3e none\n     <-- KSTREAM-SOURCE-0000000005\n   Processor: KTABLE-SOURCE-0000000009 (stores: [kongo-trucks-weight-8STATE-STORE-0000000007])\n     --\x3e none\n     <-- KSTREAM-SOURCE-0000000008"}),this.onSave()}textAreaChanged(){}onSave(){this.store.setTopology(this.formGroup.get("ascii")?.value.trim())}onClear(){this.formGroup.patchValue({ascii:void 0}),this.store.clearTopology()}static#t=this.\u0275fac=function(t){return new(t||s)(e.Y36(m),e.Y36(l.QS))};static#o=this.\u0275cmp=e.Xpm({type:s,selectors:[["app-ascii-input"]],decls:20,vars:1,consts:[["href","https://kafka.apache.org/23/javadoc/org/apache/kafka/streams/Topology.html#describe--"],[3,"formGroup"],["appearance","outline"],["matInput","","placeholder","Paste here","cdkTextareaAutosize","","cdkAutosizeMinRows","20","cdkAutosizeMaxRows","20","formControlName","ascii"],["autosize","cdkTextareaAutosize"],["mat-raised-button","","color","primary",3,"click"],["mat-raised-button","",3,"click"],["mat-button","","color","warn",3,"click"]],template:function(t,r){1&t&&(e.TgZ(0,"mat-card")(1,"mat-card-content")(2,"p"),e._uU(3," Paste your topology in the ASCII format here. This can be printed by using "),e.TgZ(4,"a",0),e._uU(5,"Topology.describe()"),e.qZA(),e._uU(6,". "),e.qZA(),e.TgZ(7,"form",1)(8,"mat-form-field",2),e._UZ(9,"textarea",3,4),e.qZA()()(),e.TgZ(11,"mat-card-actions")(12,"button",5),e.NdJ("click",function(){return r.onSave()}),e._uU(13,"Convert to image"),e.qZA(),e.TgZ(14,"button",6),e.NdJ("click",function(){return r.onClear()}),e._uU(15,"Clear"),e.qZA(),e.TgZ(16,"button",7),e.NdJ("click",function(){return r.onExample1()}),e._uU(17,"Example 1"),e.qZA(),e.TgZ(18,"button",7),e.NdJ("click",function(){return r.onExample2()}),e._uU(19,"Example 2"),e.qZA()()()),2&t&&(e.xp6(7),e.Q6J("formGroup",r.formGroup))},dependencies:[l._Y,l.Fj,l.JJ,l.JL,l.sg,l.u,k.lW,P.KE,N.Nt,G.IC,R.a8,R.hq,R.dn],styles:["mat-form-field[_ngcontent-%COMP%]{width:100%}mat-card-actions[_ngcontent-%COMP%]{justify-content:center}mat-card[_ngcontent-%COMP%]{color:#fff}"]})}return s})();var J=i(6814);function $(s,T){if(1&s&&e._UZ(0,"div",1),2&s){const o=e.oxw();e.Q6J("innerHTML",o.svgContent,e.oJD)}}let j=(()=>{class s{constructor(o,t){this.sanitizer=o,this.store=t,this.destroySubject=new M.t}ngOnInit(){this.store.getTopologySvg().pipe((0,d.R)(this.destroySubject)).subscribe(o=>{this.svgContent=o?this.sanitizer.bypassSecurityTrustHtml(o):void 0})}ngOnDestroy(){this.destroySubject.next(null),this.destroySubject.complete()}static#t=this.\u0275fac=function(t){return new(t||s)(e.Y36(E.H7),e.Y36(m))};static#o=this.\u0275cmp=e.Xpm({type:s,selectors:[["app-graph-render-svg"]],decls:1,vars:1,consts:[[3,"innerHTML",4,"ngIf"],[3,"innerHTML"]],template:function(t,r){1&t&&e.YNc(0,$,1,1,"div",0),2&t&&e.Q6J("ngIf",r.svgContent)},dependencies:[J.O5],styles:["svg[_ngcontent-%COMP%]{resize:none;font-family:SFMonoRegular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}div[_ngcontent-%COMP%]{text-align:center}"]})}return s})();const _=["canvas"];let z=(()=>{class s{constructor(o,t){this.sanitizer=o,this.store=t,this.destroySubject=new M.t}ngAfterViewInit(){this.store.getTopologySvg().pipe((0,d.R)(this.destroySubject)).subscribe(o=>{o?this.printSvgToCanvas(o):this.clearCanvas()})}ngOnDestroy(){this.destroySubject.next(null),this.destroySubject.complete()}clearCanvas(){let o=this.canvas?.nativeElement,t=o.getContext("2d");t&&t.clearRect(0,0,o.width,o.height)}printSvgToCanvas(o){try{let t=window.URL||window.webkitURL||window;if(!t)throw new Error("(browser doesnt support this)");let r=this.canvas?.nativeElement,n=r.getContext("2d"),a=new Blob([o],{type:"image/svg+xml;charset=utf-8"}),S=t.createObjectURL(a),c=new Image;c.onload=()=>{r.width=c.width,r.height=c.height,n&&n.drawImage(c,0,0)},c.crossOrigin="Anonymous",c.src=S}catch{console.error("Failed to generate canvas")}}static#t=this.\u0275fac=function(t){return new(t||s)(e.Y36(E.H7),e.Y36(m))};static#o=this.\u0275cmp=e.Xpm({type:s,selectors:[["app-graph-render-canvas"]],viewQuery:function(t,r){if(1&t&&e.Gf(_,5),2&t){let n;e.iGM(n=e.CRH())&&(r.canvas=n.first)}},decls:2,vars:0,consts:[["canvas",""]],template:function(t,r){1&t&&e._UZ(0,"canvas",null,0)},styles:["[_nghost-%COMP%]{display:block;text-align:center}"]})}return s})(),Y=(()=>{class s{static#t=this.\u0275fac=function(t){return new(t||s)};static#o=this.\u0275cmp=e.Xpm({type:s,selectors:[["app-fork-me"]],decls:3,vars:0,consts:[["href","https://github.com/gaetancollaud/kafka-streams-visualization"]],template:function(t,r){1&t&&(e.TgZ(0,"span")(1,"a",0),e._uU(2,"Fork me on GitHub"),e.qZA()())},styles:['a[_ngcontent-%COMP%]{background:#000;color:#fff;text-decoration:none;font-family:arial,sans-serif;text-align:center;font-weight:700;padding:5px 40px;font-size:1rem;line-height:2rem;position:relative;transition:.5s}a[_ngcontent-%COMP%]:hover{background:#c11;color:#fff}a[_ngcontent-%COMP%]:before, a[_ngcontent-%COMP%]:after{content:"";width:100%;display:block;position:absolute;top:1px;left:0;height:1px;background:#fff}a[_ngcontent-%COMP%]:after{bottom:1px;top:auto}@media screen and (min-width: 800px){span[_ngcontent-%COMP%]{position:fixed;display:block;top:0;right:0;width:200px;overflow:hidden;height:200px;z-index:9999}a[_ngcontent-%COMP%]{width:200px;position:absolute;top:60px;right:-60px;transform:rotate(45deg);-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);-moz-transform:rotate(45deg);-o-transform:rotate(45deg);box-shadow:4px 4px 10px #000c}}']})}return s})();const B=["tabGroup"];let X=(()=>{class s{constructor(o){this.store=o}ngOnInit(){K.Z.initialize({theme:"default",startOnLoad:!1}),this.store.getTopologySvg().subscribe(o=>{o&&this.tabGroup&&(this.tabGroup.selectedIndex=1)})}static#t=this.\u0275fac=function(t){return new(t||s)(e.Y36(m))};static#o=this.\u0275cmp=e.Xpm({type:s,selectors:[["app-root"]],viewQuery:function(t,r){if(1&t&&e.Gf(B,5),2&t){let n;e.iGM(n=e.CRH())&&(r.tabGroup=n.first)}},decls:13,vars:0,consts:[[1,"example-spacer"],["backgroundColor","primary","mat-align-tabs","center","animationDuration","0ms"],["tabGroup",""],["label","Ascii"],["label","SVG render"],["label","Canvas render"]],template:function(t,r){1&t&&(e._UZ(0,"app-fork-me"),e.TgZ(1,"mat-toolbar")(2,"span"),e._uU(3,"Kafka Streams visualization"),e.qZA(),e._UZ(4,"span",0),e.qZA(),e.TgZ(5,"mat-tab-group",1,2)(7,"mat-tab",3),e._UZ(8,"app-ascii-input"),e.qZA(),e.TgZ(9,"mat-tab",4),e._UZ(10,"app-graph-render-svg"),e.qZA(),e.TgZ(11,"mat-tab",5),e._UZ(12,"app-graph-render-canvas"),e.qZA()())},dependencies:[I.Ye,g.uX,g.SP,Z,j,z,Y],styles:[".example-spacer[_ngcontent-%COMP%]{flex:1 1 auto}mat-tab-group[_ngcontent-%COMP%]{max-height:calc(100% - 64px)}mat-tab[_ngcontent-%COMP%]{overflow:auto}"]})}return s})();var H=i(349),Q=i(7070);let D=(()=>{class s{static#t=this.\u0275fac=function(t){return new(t||s)};static#o=this.\u0275mod=e.oAB({type:s,bootstrap:[X]});static#e=this.\u0275inj=e.cJS({imports:[E.b2,H.PW,l.u5,l.UX,I.g0,Q.Ps,k.ot,g.Nh,P.lN,N.c,R.QW]})}return s})();(0,e.G48)(),E.q6().bootstrapModule(D).catch(s=>console.error(s))}},h=>{h.O(0,[736],()=>h(h.s=9407)),h.O()}]);